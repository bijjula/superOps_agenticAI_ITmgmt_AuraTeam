version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SERVICE_DESK_URL=http://service-desk-host:8001
      - INFRA_TALENT_URL=http://infra-talent-host:8002
      - THREAT_INTEL_URL=http://threat-intel-host:8003
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - service-desk-host
      - infra-talent-host
      - threat-intel-host
    networks:
      - aura-network

  # Service Desk Microservice
  service-desk-host:
    build:
      context: ./service-desk-host
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://aura_user:aura_password@postgres:5432/aura_servicedesk
      - MONGODB_URL=mongodb://mongo:27017/aura_servicedesk
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - postgres
      - mongo
      - redis
      - rabbitmq
    networks:
      - aura-network
    volumes:
      - ./service-desk-host:/app
      - /app/__pycache__

  # Infrastructure & Talent Microservice
  infra-talent-host:
    build:
      context: ./infra-talent-host
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql://aura_user:aura_password@postgres:5432/aura_infratalent
      - MONGODB_URL=mongodb://mongo:27017/aura_infratalent
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - postgres
      - mongo
      - redis
      - rabbitmq
    networks:
      - aura-network
    volumes:
      - ./infra-talent-host:/app
      - /app/__pycache__

  # Threat Intelligence Microservice
  threat-intel-host:
    build:
      context: ./threat-intel-host
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - DATABASE_URL=postgresql://aura_user:aura_password@postgres:5432/aura_threatintel
      - MONGODB_URL=mongodb://mongo:27017/aura_threatintel
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - postgres
      - mongo
      - redis  
      - rabbitmq
    networks:
      - aura-network
    volumes:
      - ./threat-intel-host:/app
      - /app/__pycache__

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=aura_user
      - POSTGRES_PASSWORD=aura_password
      - POSTGRES_MULTIPLE_DATABASES=aura_servicedesk,aura_infratalent,aura_threatintel
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./shared/database/init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
    networks:
      - aura-network

  # MongoDB Database
  mongo:
    image: mongo:7.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - aura-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aura-network

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - aura-network

volumes:
  postgres_data:
  mongo_data:
  redis_data:
  rabbitmq_data:

networks:
  aura-network:
    driver: bridge
