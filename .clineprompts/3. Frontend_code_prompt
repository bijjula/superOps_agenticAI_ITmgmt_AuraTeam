# ðŸŽ¨ Frontend Implementation Prompt â€“ Aura AI-Powered IT Management Suite

## ðŸ“˜ Objective

Develop a **fully responsive React.js frontend application** for the **Aura** project, based on the specifications outlined in the:

- **FSD (Functional Specification Document)**
- **PRD (Product Requirement Document)**

The frontend must be modern, interactive, and production-ready, using **Material-UI** styled with the **SAP Fiori theme** for a professional enterprise look.

---

## ðŸ§± Tech Stack

- **Framework**: React.js (JavaScript only)
- **UI Library**: Material-UI (MUI) with SAP Fiori theme
- **Routing**: React Router
- **State Management**: Context API or Redux
- **Notifications**: Toast (e.g., notistack or MUI Snackbar)
- **Charts**: Chart.js or Recharts
- **Forms**: React Hook Form or Formik with real-time validation
- **Responsive Design**: CSS Grid/Flexbox, MUI breakpoints

---

## ðŸ“„ Pages to Implement

Based on the backend use cases and endpoints, the following pages must be designed and developed:

### ðŸ”¹ Service Desk Automation (`service_desk_host`)
- **Ticket Submission Page**: Form with real-time validation
- **Ticket Dashboard (Agent View)**: List, filter, and assign tickets
- **Knowledge Base Search & Article Viewer**: Searchable KB with article viewer
- **Chatbot Self-Service Interface**: Conversational UI for common issues

### ðŸ”¹ Infrastructure & Talent Management (`infra_talent_host`)
- **Resource Usage Dashboard**: Charts showing infra metrics
- **Team Workload Heatmap**: Visual workload distribution
- **Capacity Planning & Recommendations Page**: Forecasts and suggestions

### ðŸ”¹ Threat Intelligence (`threat_intel_host`)
- **Security Incident Dashboard**: Alerts and incident summaries
- **Threat Analytics & Visualization**: Graphs and anomaly patterns
- **Automated Response Actions Panel**: Trigger and view responses

---

## ðŸ§© UI/UX Requirements

- **Responsive Layout**: Works seamlessly across desktop, tablet, and mobile
- **Navigation**: Sidebar + header layout with React Router
- **Transitions**: Smooth animations and hover effects
- **Forms**: Real-time validation, dynamic search/filter
- **Charts**: Interactive graphs for analytics
- **Notifications**: Toasts for success/error/info messages
- **Pixel-Perfect Design**: SAP Fiori theme consistency
---

## ðŸ§ª Build & Deployment

- Ensure **no dependency errors** during build
- Use only `.js` files (no `.ts` or `.tsx`)
- Final build must be **clean, optimized, and production-ready**
- Integrate with backend APIs (CORS and auth-free)

---

## ðŸŽ¯ Goal

Deliver a frontend application that is:
- Visually polished and enterprise-grade
- Functionally complete for all backend use cases
- Responsive and accessible
- Ready for immediate integration and testing